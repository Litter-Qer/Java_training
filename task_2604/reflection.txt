类设计的注意:
1. 由于使用println或者print方法进行打印，每一次只能打印出一个字符（char）
所以打印时需要对各个图形进行限制。
例如三角形，此次任务中的打印方式，只能打出直角，不能打出其他的三角形。
所以在设计三角形类的时候就只允许设置高度。

2. 梯形设计的时候，应该让上底永远小于下底。如果相同则自动生成一个高为1，长为上底的长方形。

3. 类之间的继承关系
保证Shape作为父类，拥有足够的methods。使用其他子类更改Shape中的方法，由此降低程序的耦合性

4. 写不同的类的时候应该提前注意不同的性质。比如三角形只需要高，而梯形则需要上底和下底

双重循环打印的实现
1. 因为每个图形的属性不同，所以不同的图形需要不同的双重循环
例如三角形，在对齐方式为向右对齐时，则需要打印空格。
相反，如果是向左对齐，则不需要打印空格。

2. 对齐方式对于结果的影响
设计打印的时候，应该提前想到对齐方式对于结果的影响。
比如将不同的对齐方式设计成不同的method，提高程序的可移植性。

3. 打印的方式
此次任务采取的是print和println的方式打印图形，也可以尝试不同的打印方式
比如使用repeat先构建字符串，然后直接print或者println

4. 设计test
设计test的时候，应该尽量保证只创建一次对象。减少对内存的占有
尽量避免Magic number或者String的使用，提高程序的可读性

5. 双重循环的逻辑
要注意第一个for loop一般表示新起一行
而第二个for loop一般表示在一行中继续打印
当需要打印一行的时候注意使用print，而不是println

反思和提高
1. 尝试将Shape改为abstract类
程序的可移植性进一步提高，降低耦合

2. 使用更为简单的打印思路，减少代码的行数

3. test从junit改为spock的方式
简化代码的开发

4. 改善代码的美观度
